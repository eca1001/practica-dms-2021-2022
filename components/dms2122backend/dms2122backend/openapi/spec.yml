openapi: 3.0.0
info:
  title: DMS backend service REST API
  version: '1.0'
  description: |
    REST API for the backend service.

    This is part of the mandatory exercise.

    Diseño y Mantenimiento del Software. Grado en Ingeniería Informática, Universidad de Burgos, 2021-2022.
  contact:
    name: Universidad de Burgos
tags:
  - name: questions
    description: Question-related operations (e.g., create, edit)
  - name: answers
    description: Answer-related operations (e.g., list)
  - name: server
    description: Operations about the server itself (e.g., server status querying)
servers:
  - url: /api/v1
paths:
  '/':
      head:
      summary: Health test for the service
      operationId: dms2122backend.presentation.rest.server.health_test
      responses:
        '204':
          description: Success response (will not redirect)
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - server
  /questions:
    get:
      summary: Gets a listing of questions.
      operationId: dms2122backend.presentation.rest.user.list_questions
      responses:
        '200':
          description: A list of questions.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuestionsFullListModel'
      tags:
        - questions
      security:
        - user_token: []
          api_key: []
  /question/new:
    post:
      summary: Creates a new question.
      operationId: dms2122backend.presentation.rest.question.create_question
      requestBody:
        description: Question's ID.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/QuestionFullModel'
      responses:
        '200':
          description: Data of the requested question.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuestionFullIdModel'
        '400':
          description: Errors in the request.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The requesting user has no permission to do this operation.
          content:
            'text/plain':
              schema:
                type: string
        '409':
          description: There is a conflict with some of the question's unique data.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
      security:
        - user_token: []
          api_key: []
  /question/{id}:
    put:
      summary: Edit a question given an ID.
      operationId: dms2122backend.presentation.rest.question.edit_question
      requestBody:
        description: Question's data.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/QuestionFullIdModel'
      responses:
        '200':
          description: Data of the requested question.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuestionFullIdModel'
        '400':
          description: Errors in the request.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The requesting user has no permission to do this operation.
          content:
            'text/plain':
              schema:
                type: string
        '404':
          description: The given question does not have any answers, or the question does not exist.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
      security:
        - user_token: []
          api_key: []
    get:
      summary: Obtains a question given an ID.
      operationId: dms2122backend.presentation.rest.question.get_question_by_id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Data of the newly created question.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/QuestionFullIdModel'
        '400':
          description: Errors in the request.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
      security:
        - user_token: []
          api_key: []
  /question/{id}/answers:
    get:
      summary: Gets whether a question has answers.
      operationId: dms2122backend.presentation.rest.answer.question_has_answers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The given question has some answers.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The requesting user has no permission to do this operation.
          content:
            'text/plain':
              schema:
                type: string
        '404':
          description: The given question does not have any answers, or the question does not exist.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
        - answers
      security:
        - user_token: []
          api_key: []
  /question/{id}/answer/{username}:
    post:
      summary: Answers a question by a user.
      operationId: dms2122backend.presentation.rest.answer.answer
      requestBody:
        description: Answer data.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/AnswerFullModel'
      responses:
        '200':
          description: The question has been answered.
          content:
            'text/plain':
              schema:
                type: string
        '400':
          description: A mandatory parameter was not given.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The requestor has no privilege to answer a question.
          content:
            'text/plain':
              schema:
                type: string
        '404':
          description: The given question or user does not exist.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
        - answers
      security:
        - user_token: []
          api_key: []
    get:
      summary: Gets a answer of a question.
      operationId: dms2122backend.presentation.rest.answer.get_answer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The list of answers for that question.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AnswersFullListModel'
        '403':
          description: The requesting user has no permission to do this operation.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
        - answers
      security:
        - user_token: []
          api_key: []
  /answers/{id}:
    get:
      summary: Gets all answers to a question.
      operationId: dms2122backend.presentation.rest.answer.list_all_for_question
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The list of answers for that question.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AnswersFullListModel'
        '400':
          description: Errors in the request.
          content:
            'text/plain':
              schema:
                type: string
        '403':
          description: The requesting user has no permission to do this operation.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
        - answers
      security:
        - user_token: []
          api_key: []
  /answers/{username}:
    get:
      summary: Gets all answers to a question.
      operationId: dms2122backend.presentation.rest.answer.list_all_for_user
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The list of answers for that user.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AnswersFullListModel'
        '403':
          description: The requesting user has no permission to do this operation.
          content:
            'text/plain':
              schema:
                type: string
      tags:
        - questions
        - answers
      security:
        - user_token: []
          api_key: []


components:
  schemas:
    UserFullModel:
      type: object
      properties:
        username:
          type: string
      required:
        - username
    UserFullPasswordModel:
      allOf:
        - $ref: '#/components/schemas/UserFullModel'
        - type: object
          properties:
            password:
              type: string
          required:
            - password
    UsersFullListModel:
      type: array
      items:
        $ref: '#/components/schemas/UserFullModel'

    QuestionFullModel:
      type: object
      properties:
        title:
          type: string
        body:
          type: string
        option1:
          type: string
        option2:
          type: string
        option3:
          type: string
        correct_answer:
          type: integer
        punctuation:
          type: float
        penalty:
          type: float
      required:
        - title
        - body
        - option1
        - option2
        - option3
        - correct_answer
        - punctuation
        - penalty
    QuestionFullIdModel:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        body:
          type: string
        option1:
          type: string
        option2:
          type: string
        option3:
          type: string
        correct_answer:
          type: integer
        punctuation:
          type: float
        penalty:
          type: float
      required:
        - id
        - title
        - body
        - option1
        - option2
        - option3
        - correct_answer
        - punctuation
        - penalty
    QuestionsFullListModel:
      type: array
      items:
        $ref: '#/components/schemas/QuestionFullModel'

    AnswerFullModel:
      type: object
      properties:
        username:
          type: string
        number:
          type: integer
        id:
          type: integer
      required:
        - username
        - number
        - id
    AnswersFullListModel:
      type: array
      items:
        $ref: '#/components/schemas/AnswerFullModel'

  securitySchemes:
    api_key:
      type: apiKey
      name: X-ApiKey-Auth
      in: header
      x-apikeyInfoFunc: dms2122backend.presentation.rest.security.verify_api_key



